// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id          String   @id @default(uuid()) // UUID as Primary Key
  name        String
  email       String   @unique
  password    String?
  role        Role
  Answer      Answer[]
  image       String?
  totalAmount Int @default(0)
}

model Question {
  id         String   @id @default(uuid()) // UUID as Primary Key
  value      String
  options    String[]
  amount     Int
  CorrectIdx Int
  Answer     Answer[]
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
}

model Answer {
  id          String   @id @default(uuid()) // UUID as Primary Key
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  questionId  String
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade) //? Not sure if ans should del if ques is del but for now it will del
  selectedIdx String //selected option index of a question
  isCorrect     Boolean
}

model Category {
  id        String     @id @default(uuid()) // UUID as Primary Key
  name      String
  questions Question[]
}
